/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "nativeTicker",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "native",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenList",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenMapping",
    outputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017e7380380620017e7833981810160405281019062000037919062000148565b620000576200004b6200006560201b60201c565b6200006d60201b60201c565b806001819055505062000198565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905062000142816200017e565b92915050565b6000602082840312156200015b57600080fd5b60006200016b8482850162000131565b91505092915050565b6000819050919050565b620001898162000174565b81146200019557600080fd5b50565b61163f80620001a86000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101bb5780639776aacf146101e65780639ead72221461020f578063c1612c441461024c578063d0e30db014610275578063f2fde38b1461027f576100a7565b806311b0b42d146100ac5780631f14df69146100d75780632e1a7d4d14610114578063667cb4ba1461013d578063715018a61461017b5780637d34900a14610192575b600080fd5b3480156100b857600080fd5b506100c16102a8565b6040516100ce9190611222565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610f41565b6102ae565b60405161010b9190611326565b60405180910390f35b34801561012057600080fd5b5061013b6004803603810190610136919061100b565b6102d3565b005b34801561014957600080fd5b50610164600480360381019061015f9190610fa6565b6104d3565b60405161017292919061123d565b60405180910390f35b34801561018757600080fd5b50610190610517565b005b34801561019e57600080fd5b506101b960048036038101906101b49190611034565b61059f565b005b3480156101c757600080fd5b506101d0610859565b6040516101dd91906111a7565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190610fcf565b610882565b005b34801561021b57600080fd5b506102366004803603810190610231919061100b565b6109bd565b6040516102439190611222565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190611034565b6109e1565b005b61027d610c0a565b005b34801561028b57600080fd5b506102a660048036038101906102a19190610f18565b610cd4565b005b60015481565b6004602052816000526040600020602052806000526040600020600091509150505481565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001548152602001908152602001600020541015610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f90611286565b60405180910390fd5b6103cd81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002054610dcc90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060015481526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161044990611192565b60006040518083038185875af1925050503d8060008114610486576040519150601f19603f3d011682016040523d82523d6000602084013e61048b565b606091505b50509050806104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c6906112a6565b60405180910390fd5b5050565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b61051f610de2565b73ffffffffffffffffffffffffffffffffffffffff1661053d610859565b73ffffffffffffffffffffffffffffffffffffffff1614610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906112e6565b60405180910390fd5b61059d6000610dea565b565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d906112c6565b60405180910390fd5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205410156106d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d090611306565b60405180910390fd5b61073c83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610dcc90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016108019291906111f9565b602060405180830381600087803b15801561081b57600080fd5b505af115801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190610f7d565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61088a610de2565b73ffffffffffffffffffffffffffffffffffffffff166108a8610859565b73ffffffffffffffffffffffffffffffffffffffff16146108fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f5906112e6565b60405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600260008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060038290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600381815481106109cd57600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7f906112c6565b60405180910390fd5b6002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610afb939291906111c2565b602060405180830381600087803b158015610b1557600080fd5b505af1158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190610f7d565b50610bb183600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610eae90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b60003411610c1757600080fd5b610c7c34600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002054610eae90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002081905550565b610cdc610de2565b73ffffffffffffffffffffffffffffffffffffffff16610cfa610859565b73ffffffffffffffffffffffffffffffffffffffff1614610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d47906112e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db790611266565b60405180910390fd5b610dc981610dea565b50565b60008183610dda91906113b3565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610ebc919061135d565b905092915050565b600081359050610ed3816115ad565b92915050565b600081519050610ee8816115c4565b92915050565b600081359050610efd816115db565b92915050565b600081359050610f12816115f2565b92915050565b600060208284031215610f2a57600080fd5b6000610f3884828501610ec4565b91505092915050565b60008060408385031215610f5457600080fd5b6000610f6285828601610ec4565b9250506020610f7385828601610eee565b9150509250929050565b600060208284031215610f8f57600080fd5b6000610f9d84828501610ed9565b91505092915050565b600060208284031215610fb857600080fd5b6000610fc684828501610eee565b91505092915050565b60008060408385031215610fe257600080fd5b6000610ff085828601610eee565b925050602061100185828601610ec4565b9150509250929050565b60006020828403121561101d57600080fd5b600061102b84828501610f03565b91505092915050565b6000806040838503121561104757600080fd5b600061105585828601610f03565b925050602061106685828601610eee565b9150509250929050565b611079816113e7565b82525050565b61108881611405565b82525050565b600061109b60268361134c565b91506110a682611468565b604082019050919050565b60006110be60128361134c565b91506110c9826114b7565b602082019050919050565b60006110e1603a8361134c565b91506110ec826114e0565b604082019050919050565b6000611104600f8361134c565b915061110f8261152f565b602082019050919050565b600061112760208361134c565b915061113282611558565b602082019050919050565b600061114a60168361134c565b915061115582611581565b602082019050919050565b600061116d600083611341565b9150611178826115aa565b600082019050919050565b61118c8161142f565b82525050565b600061119d82611160565b9150819050919050565b60006020820190506111bc6000830184611070565b92915050565b60006060820190506111d76000830186611070565b6111e46020830185611070565b6111f16040830184611183565b949350505050565b600060408201905061120e6000830185611070565b61121b6020830184611183565b9392505050565b6000602082019050611237600083018461107f565b92915050565b6000604082019050611252600083018561107f565b61125f6020830184611070565b9392505050565b6000602082019050818103600083015261127f8161108e565b9050919050565b6000602082019050818103600083015261129f816110b1565b9050919050565b600060208201905081810360008301526112bf816110d4565b9050919050565b600060208201905081810360008301526112df816110f7565b9050919050565b600060208201905081810360008301526112ff8161111a565b9050919050565b6000602082019050818103600083015261131f8161113d565b9050919050565b600060208201905061133b6000830184611183565b92915050565b600081905092915050565b600082825260208201905092915050565b60006113688261142f565b91506113738361142f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113a8576113a7611439565b5b828201905092915050565b60006113be8261142f565b91506113c98361142f565b9250828210156113dc576113db611439565b5b828203905092915050565b60006113f28261140f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e7375666669656e742062616c616e63650000000000000000000000000000600082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f546f6b656e206e6f742061646465640000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42616c616e6365206e6f742073756666696369656e7400000000000000000000600082015250565b50565b6115b6816113e7565b81146115c157600080fd5b50565b6115cd816113f9565b81146115d857600080fd5b50565b6115e481611405565b81146115ef57600080fd5b50565b6115fb8161142f565b811461160657600080fd5b5056fea2646970667358221220d4f59b6984b0810500a7ad6b221989ff48c7093ecbce0a49e5b5cfc413581a0464736f6c63430008040033";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    nativeTicker: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wallet> {
    return super.deploy(nativeTicker, overrides || {}) as Promise<Wallet>;
  }
  getDeployTransaction(
    nativeTicker: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(nativeTicker, overrides || {});
  }
  attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
