/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xd01e15ec",
        type: "bytes32",
      },
    ],
    name: "c_0xd01e15ec",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenList",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenMapping",
    outputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6116c28061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639776aacf116100665780639776aacf146101485780639ead722214610164578063a8d2021a14610194578063c9630cb0146101b0578063f2fde38b146101cc5761009e565b80631f14df69146100a357806321165b26146100d3578063667cb4ba146100ef578063715018a6146101205780638da5cb5b1461012a575b600080fd5b6100bd60048036038101906100b89190611108565b6101e8565b6040516100ca919061142f565b60405180910390f35b6100ed60048036038101906100e8919061116d565b61020d565b005b6101096004803603810190610104919061116d565b610210565b604051610117929190611386565b60405180910390f35b610128610254565b005b6101326102dc565b60405161013f91906112f0565b60405180910390f35b610162600480360381019061015d9190611196565b610305565b005b61017e600480360381019061017991906111d2565b61051c565b60405161018b919061136b565b60405180910390f35b6101ae60048036038101906101a991906111fb565b610540565b005b6101ca60048036038101906101c591906111fb565b610a8e565b005b6101e660048036038101906101e191906110df565b610e9b565b005b6003602052816000526040600020602052806000526040600020600091509150505481565b50565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b61025c610f93565b73ffffffffffffffffffffffffffffffffffffffff1661027a6102dc565b73ffffffffffffffffffffffffffffffffffffffff16146102d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c7906113ef565b60405180910390fd5b6102da6000610f9b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61030d610f93565b73ffffffffffffffffffffffffffffffffffffffff1661032b6102dc565b73ffffffffffffffffffffffffffffffffffffffff1614610381576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610378906113ef565b60405180910390fd5b6103ad7fc79ce42af14b4065aad4442d78f38d34c1d39e70a98ccf2357c5271cf9c5907460001b61020d565b6103d97fa082e56bb636b6f4d296a9578aecd384958f561c0d353aa4b3376cf69781a29060001b61020d565b6104057fc19aa6d0d5377b89fce766a21b1614765e6cb177d46902bb7566706ab75858b360001b61020d565b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506104c37f110cddc2cbe31a285c9596fafd417b38ef1300bce754534fc4d3eb848da45ecb60001b61020d565b6104ef7f2343c85451e5901306a3549cbd33baa83379688fedccfdda64f8f54f418176b960001b61020d565b60028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b6002818154811061052c57600080fd5b906000526020600020016000915090505481565b8061056d7f282b75e07678d4282c6ae429f1e5861406d505b0dbccbd15e36bc58f65d9ba6760001b61020d565b6105997f1b3f0265a9f9b6efab5f90bd6a33ed049255f75f155c52d8ba2b8d3781f229d760001b61020d565b6105c57f9120983b1be4dcd6844e035d0e8b0339398252dac0ba04f67393992c1f722b8160001b61020d565b6105f17fd7a1a8dc51237a5ece01926a9eaa2496c14dd5918a89674c52e0cbc72a6f4f0e60001b61020d565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e906113cf565b60405180910390fd5b6106c37ff00d5a459c2c6a6e305e2d5b6c50433afa090e81c7c7e22dff1d0598d7aa17f060001b61020d565b6106ef7f2fbc7f4e4a195f4f1e13efa25db1894774f36653f095b09d434176b5174135c560001b61020d565b61071b7f7c6d602793ba07ff7b369782e057e0e73f3c2b572040bc5e7bce94cfe9b3b09460001b61020d565b6107477faeeb49c1f5296a5ccdeb036a4d3459434599862d41f3046b93faff0f0784e79160001b61020d565b6107737fbf65c8573b2071145e70b5f58c9005db9c8d66bcedb24108044c80ea303a5a9560001b61020d565b61079f7f2a949e94ac45180deb42597b6a7d19a286ae7ae467b91d981f587f1f8b210b6660001b61020d565b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610832576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108299061140f565b60405180910390fd5b61085e7fea07032a89ab14753a2d084184c9bd3a619ae9b903a3ab2d0a4e639fc06bb47260001b61020d565b61088a7fbdedbd9c249b64cc0f3b5b3861d6f1d60daded61c30f75b17329993c1160962b60001b61020d565b6108b67fc2ea7500fe6fa75092e817795eadc5d29812abdbf348ae2ecfe1de318df22f0960001b61020d565b61091983600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205461105f90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506109997f3efbeab8dbae39ff71f6cc7a0b283c2f8c6f1f188712c6cadf47ea6cccaeac3860001b61020d565b6109c57f86d11e4855cd1f45aca8de4b317a91d96d0b324b4112d32e72801ecacd06b2ee60001b61020d565b6001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610a36929190611342565b602060405180830381600087803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a889190611144565b50505050565b80610abb7f282b75e07678d4282c6ae429f1e5861406d505b0dbccbd15e36bc58f65d9ba6760001b61020d565b610ae77f1b3f0265a9f9b6efab5f90bd6a33ed049255f75f155c52d8ba2b8d3781f229d760001b61020d565b610b137f9120983b1be4dcd6844e035d0e8b0339398252dac0ba04f67393992c1f722b8160001b61020d565b610b3f7fd7a1a8dc51237a5ece01926a9eaa2496c14dd5918a89674c52e0cbc72a6f4f0e60001b61020d565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc906113cf565b60405180910390fd5b610c117ff00d5a459c2c6a6e305e2d5b6c50433afa090e81c7c7e22dff1d0598d7aa17f060001b61020d565b610c3d7f2fbc7f4e4a195f4f1e13efa25db1894774f36653f095b09d434176b5174135c560001b61020d565b610c697f6e3f4985389db89d6b832a92887e0deba822de24f6bdfbde4e6b7a2d3bb9ec9960001b61020d565b610c957f22cb1562166ff7beeb2234c9334bfdc1cd9c3c0b31c03b6a7ef921fae19a531660001b61020d565b610cc17f5bfe026ea0002197134550ededc8ea78d55139486f4fcbcd503c9ac9b658c0ad60001b61020d565b6001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d349392919061130b565b602060405180830381600087803b158015610d4e57600080fd5b505af1158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d869190611144565b50610db37f5bb40ad93dea87f6eae2fe0abd636143142bc749f87f7bc2f75013510cc846a160001b61020d565b610ddf7f1eac64de831cd21e51812e313908a7d63812850eb923dcdba122c8c74cedb8c360001b61020d565b610e4283600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205461107590919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b610ea3610f93565b73ffffffffffffffffffffffffffffffffffffffff16610ec16102dc565b73ffffffffffffffffffffffffffffffffffffffff1614610f17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0e906113ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7e906113af565b60405180910390fd5b610f9081610f9b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000818361106d91906114b1565b905092915050565b60008183611083919061145b565b905092915050565b60008135905061109a81611630565b92915050565b6000815190506110af81611647565b92915050565b6000813590506110c48161165e565b92915050565b6000813590506110d981611675565b92915050565b6000602082840312156110f157600080fd5b60006110ff8482850161108b565b91505092915050565b6000806040838503121561111b57600080fd5b60006111298582860161108b565b925050602061113a858286016110b5565b9150509250929050565b60006020828403121561115657600080fd5b6000611164848285016110a0565b91505092915050565b60006020828403121561117f57600080fd5b600061118d848285016110b5565b91505092915050565b600080604083850312156111a957600080fd5b60006111b7858286016110b5565b92505060206111c88582860161108b565b9150509250929050565b6000602082840312156111e457600080fd5b60006111f2848285016110ca565b91505092915050565b6000806040838503121561120e57600080fd5b600061121c858286016110ca565b925050602061122d858286016110b5565b9150509250929050565b611240816114e5565b82525050565b61124f81611503565b82525050565b600061126260268361144a565b915061126d82611566565b604082019050919050565b6000611285600f8361144a565b9150611290826115b5565b602082019050919050565b60006112a860208361144a565b91506112b3826115de565b602082019050919050565b60006112cb60168361144a565b91506112d682611607565b602082019050919050565b6112ea8161152d565b82525050565b60006020820190506113056000830184611237565b92915050565b60006060820190506113206000830186611237565b61132d6020830185611237565b61133a60408301846112e1565b949350505050565b60006040820190506113576000830185611237565b61136460208301846112e1565b9392505050565b60006020820190506113806000830184611246565b92915050565b600060408201905061139b6000830185611246565b6113a86020830184611237565b9392505050565b600060208201905081810360008301526113c881611255565b9050919050565b600060208201905081810360008301526113e881611278565b9050919050565b600060208201905081810360008301526114088161129b565b9050919050565b60006020820190508181036000830152611428816112be565b9050919050565b600060208201905061144460008301846112e1565b92915050565b600082825260208201905092915050565b60006114668261152d565b91506114718361152d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114a6576114a5611537565b5b828201905092915050565b60006114bc8261152d565b91506114c78361152d565b9250828210156114da576114d9611537565b5b828203905092915050565b60006114f08261150d565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f546f6b656e206e6f742061646465640000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42616c616e6365206e6f742073756666696369656e7400000000000000000000600082015250565b611639816114e5565b811461164457600080fd5b50565b611650816114f7565b811461165b57600080fd5b50565b61166781611503565b811461167257600080fd5b50565b61167e8161152d565b811461168957600080fd5b5056fea2646970667358221220f6d256e2bda7cecc9e7c0024a04321a42de112bd61c25703293c487be8612a1c64736f6c63430008040033";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wallet> {
    return super.deploy(overrides || {}) as Promise<Wallet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
