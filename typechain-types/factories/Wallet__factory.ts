/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "nativeTicker",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokens",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "ticker",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
        ],
        internalType: "struct Wallet.Token[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "native",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenList",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenMapping",
    outputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bba38038062001bba833981810160405281019062000037919062000148565b620000576200004b6200006560201b60201c565b6200006d60201b60201c565b806001819055505062000198565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905062000142816200017e565b92915050565b6000602082840312156200015b57600080fd5b60006200016b8482850162000131565b91505092915050565b6000819050919050565b620001898162000174565b81146200019557600080fd5b50565b611a1280620001a86000396000f3fe6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063aa6ca80811610059578063aa6ca80814610267578063c1612c4414610292578063d0e30db0146102bb578063f2fde38b146102c5576100c2565b80638da5cb5b146101d65780639776aacf146102015780639ead72221461022a576100c2565b806311b0b42d146100c75780631f14df69146100f25780632e1a7d4d1461012f578063667cb4ba14610158578063715018a6146101965780637d34900a146101ad575b600080fd5b3480156100d357600080fd5b506100dc6102ee565b6040516100e99190611573565b60405180910390f35b3480156100fe57600080fd5b50610119600480360381019061011491906111ad565b6102f4565b6040516101269190611677565b60405180910390f35b34801561013b57600080fd5b5061015660048036038101906101519190611277565b610319565b005b34801561016457600080fd5b5061017f600480360381019061017a9190611212565b610519565b60405161018d92919061158e565b60405180910390f35b3480156101a257600080fd5b506101ab61055d565b005b3480156101b957600080fd5b506101d460048036038101906101cf91906112a0565b6105e5565b005b3480156101e257600080fd5b506101eb61089f565b6040516101f891906114d6565b60405180910390f35b34801561020d57600080fd5b506102286004803603810190610223919061123b565b6108c8565b005b34801561023657600080fd5b50610251600480360381019061024c9190611277565b610a03565b60405161025e9190611573565b60405180910390f35b34801561027357600080fd5b5061027c610a27565b6040516102899190611551565b60405180910390f35b34801561029e57600080fd5b506102b960048036038101906102b491906112a0565b610c1a565b005b6102c3610e43565b005b3480156102d157600080fd5b506102ec60048036038101906102e79190611184565b610f0d565b005b60015481565b6004602052816000526040600020602052806000526040600020600091509150505481565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060015481526020019081526020016000205410156103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a5906115d7565b60405180910390fd5b61041381600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060015481526020019081526020016000205461100590919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060015481526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161048f906114c1565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c906115f7565b60405180910390fd5b5050565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b61056561101b565b73ffffffffffffffffffffffffffffffffffffffff1661058361089f565b73ffffffffffffffffffffffffffffffffffffffff16146105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611637565b60405180910390fd5b6105e36000611023565b565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611617565b60405180910390fd5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054101561071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071690611657565b60405180910390fd5b61078283600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000205461100590919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610847929190611528565b602060405180830381600087803b15801561086157600080fd5b505af1158015610875573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089991906111e9565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108d061101b565b73ffffffffffffffffffffffffffffffffffffffff166108ee61089f565b73ffffffffffffffffffffffffffffffffffffffff1614610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90611637565b60405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600260008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060038290806001815401808255809150506001900390600052602060002001600090919091909150555050565b60038181548110610a1357600080fd5b906000526020600020016000915090505481565b6060600060038054905067ffffffffffffffff811115610a70577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610aa957816020015b610a966110fd565b815260200190600190039081610a8e5790505b50905060005b600380549050811015610c125760405180604001604052806002600060038581548110610b05577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015481526020019081526020016000206000015481526020016002600060038581548110610b65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250828281518110610bf4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508080610c0a906117c3565b915050610aaf565b508091505090565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610cc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb890611617565b60405180910390fd5b6002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610d34939291906114f1565b602060405180830381600087803b158015610d4e57600080fd5b505af1158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8691906111e9565b50610dea83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020546110e790919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b60003411610e5057600080fd5b610eb534600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001548152602001908152602001600020546110e790919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600154815260200190815260200160002081905550565b610f1561101b565b73ffffffffffffffffffffffffffffffffffffffff16610f3361089f565b73ffffffffffffffffffffffffffffffffffffffff1614610f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8090611637565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff0906115b7565b60405180910390fd5b61100281611023565b50565b60008183611013919061173d565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836110f591906116e7565b905092915050565b604051806040016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60008135905061113f81611980565b92915050565b60008151905061115481611997565b92915050565b600081359050611169816119ae565b92915050565b60008135905061117e816119c5565b92915050565b60006020828403121561119657600080fd5b60006111a484828501611130565b91505092915050565b600080604083850312156111c057600080fd5b60006111ce85828601611130565b92505060206111df8582860161115a565b9150509250929050565b6000602082840312156111fb57600080fd5b600061120984828501611145565b91505092915050565b60006020828403121561122457600080fd5b60006112328482850161115a565b91505092915050565b6000806040838503121561124e57600080fd5b600061125c8582860161115a565b925050602061126d85828601611130565b9150509250929050565b60006020828403121561128957600080fd5b60006112978482850161116f565b91505092915050565b600080604083850312156112b357600080fd5b60006112c18582860161116f565b92505060206112d28582860161115a565b9150509250929050565b60006112e88383611483565b60408301905092915050565b6112fd81611771565b82525050565b61130c81611771565b82525050565b600061131d826116a2565b61132781856116ba565b935061133283611692565b8060005b8381101561136357815161134a88826112dc565b9750611355836116ad565b925050600181019050611336565b5085935050505092915050565b6113798161178f565b82525050565b6113888161178f565b82525050565b600061139b6026836116d6565b91506113a68261183b565b604082019050919050565b60006113be6012836116d6565b91506113c98261188a565b602082019050919050565b60006113e1603a836116d6565b91506113ec826118b3565b604082019050919050565b6000611404600f836116d6565b915061140f82611902565b602082019050919050565b60006114276020836116d6565b91506114328261192b565b602082019050919050565b600061144a6016836116d6565b915061145582611954565b602082019050919050565b600061146d6000836116cb565b91506114788261197d565b600082019050919050565b6040820160008201516114996000850182611370565b5060208201516114ac60208501826112f4565b50505050565b6114bb816117b9565b82525050565b60006114cc82611460565b9150819050919050565b60006020820190506114eb6000830184611303565b92915050565b60006060820190506115066000830186611303565b6115136020830185611303565b61152060408301846114b2565b949350505050565b600060408201905061153d6000830185611303565b61154a60208301846114b2565b9392505050565b6000602082019050818103600083015261156b8184611312565b905092915050565b6000602082019050611588600083018461137f565b92915050565b60006040820190506115a3600083018561137f565b6115b06020830184611303565b9392505050565b600060208201905081810360008301526115d08161138e565b9050919050565b600060208201905081810360008301526115f0816113b1565b9050919050565b60006020820190508181036000830152611610816113d4565b9050919050565b60006020820190508181036000830152611630816113f7565b9050919050565b600060208201905081810360008301526116508161141a565b9050919050565b600060208201905081810360008301526116708161143d565b9050919050565b600060208201905061168c60008301846114b2565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006116f2826117b9565b91506116fd836117b9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117325761173161180c565b5b828201905092915050565b6000611748826117b9565b9150611753836117b9565b9250828210156117665761176561180c565b5b828203905092915050565b600061177c82611799565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117ce826117b9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118015761180061180c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e7375666669656e742062616c616e63650000000000000000000000000000600082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f546f6b656e206e6f742061646465640000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42616c616e6365206e6f742073756666696369656e7400000000000000000000600082015250565b50565b61198981611771565b811461199457600080fd5b50565b6119a081611783565b81146119ab57600080fd5b50565b6119b78161178f565b81146119c257600080fd5b50565b6119ce816117b9565b81146119d957600080fd5b5056fea2646970667358221220e3f54a0aab14984efa137c4f42a7da9d864c157b421ce9782ef61f761409294364736f6c63430008040033";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    nativeTicker: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wallet> {
    return super.deploy(nativeTicker, overrides || {}) as Promise<Wallet>;
  }
  getDeployTransaction(
    nativeTicker: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(nativeTicker, overrides || {});
  }
  attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
