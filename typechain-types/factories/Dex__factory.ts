/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dex, DexInterface } from "../Dex";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "enum Dex.Type",
        name: "orderType",
        type: "uint8",
      },
    ],
    name: "GetOrderBook",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "enum Dex.Type",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "ticker",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "filled",
            type: "uint256",
          },
        ],
        internalType: "struct Dex.Order[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Dex.Type",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createLimitOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Dex.Type",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createMarketOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderBook",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "enum Dex.Type",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "filled",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenList",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenMapping",
    outputs: [
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ticker",
        type: "bytes32",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612ac680620001146000396000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063c1612c4411610059578063c1612c441461032d578063cd7b9df514610356578063d0e30db014610393578063f2fde38b1461039d576100f3565b80638da5cb5b146102735780639776aacf1461029e57806399ec2f1c146102c75780639ead7222146102f0576100f3565b8063667cb4ba116100c6578063667cb4ba146101cc5780636f3b62f91461020a578063715018a6146102335780637d34900a1461024a576100f3565b80630bb431b6146100f85780631f14df691461013b5780632a58b330146101785780632e1a7d4d146101a3575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a919061207c565b6103c6565b6040516101329796959493929190612624565b60405180910390f35b34801561014757600080fd5b50610162600480360381019061015d9190611f76565b61045f565b60405161016f9190612609565b60405180910390f35b34801561018457600080fd5b5061018d610484565b60405161019a9190612609565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c5919061217d565b61048a565b005b3480156101d857600080fd5b506101f360048036038101906101ee9190611fdb565b6106e4565b604051610201929190612520565b60405180910390f35b34801561021657600080fd5b50610231600480360381019061022c919061211a565b610728565b005b34801561023f57600080fd5b5061024861126d565b005b34801561025657600080fd5b50610271600480360381019061026c91906121a6565b6112f5565b005b34801561027f57600080fd5b506102886115af565b6040516102959190612468565b60405180910390f35b3480156102aa57600080fd5b506102c560048036038101906102c09190612004565b6115d8565b005b3480156102d357600080fd5b506102ee60048036038101906102e991906120cb565b611713565b005b3480156102fc57600080fd5b506103176004803603810190610312919061217d565b6117c0565b6040516103249190612505565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f91906121a6565b6117e4565b005b34801561036257600080fd5b5061037d60048036038101906103789190612040565b611a0d565b60405161038a91906124e3565b60405180910390f35b61039b611bd8565b005b3480156103a957600080fd5b506103c460048036038101906103bf9190611f4d565b611cde565b005b600560205282600052604060002060205281600052604060002081815481106103ee57600080fd5b906000526020600020906006020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154908060050154905087565b6003602052816000526040600020602052806000526040600020600091509150505481565b60045481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f424e420000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053490612569565b60405180910390fd5b6105c081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f424e420000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611dd690919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f424e42000000000000000000000000000000000000000000000000000000000081526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161065a90612453565b60006040518083038185875af1925050503d8060008114610697576040519150601f19603f3d011682016040523d82523d6000602084013e61069c565b606091505b50509050806106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d790612589565b60405180910390fd5b5050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b82600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c6906125a9565b60405180910390fd5b60006001811115610809577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b856001811115610842577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156108dc5761085b8284611dec90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f424e42000000000000000000000000000000000000000000000000000000000081526020019081526020016000205410156108d757600080fd5b6109b3565b600180811115610915577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b85600181111561094e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156109b25782600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000205410156109b157600080fd5b5b5b6000600560008681526020019081526020016000206000876001811115610a03577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1681526020019081526020016000209050806040518060e0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001886001811115610a7f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001878152602001868152602001858152602001600081525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610b66577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550606082015181600201556080820151816003015560a0820151816004015560c082015181600501555050600080828054905011610ba9576000610bbb565b60018280549050610bba9190612798565b5b90505b600081111561124d5760006001811115610c01577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b876001811115610c3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610ce65750818181548110610c7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600602016004015482600183610c9b9190612798565b81548110610cd2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020160040154115b80610e0b5750600180811115610d25577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b876001811115610d5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610e0a5750818181548110610d9f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600602016004015482600183610dbf9190612798565b81548110610df6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020160040154105b5b15610e155761124d565b600082600183610e259190612798565b81548110610e5c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600602016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610f20577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115610f58577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050828281548110610fbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906006020183600184610fdb9190612798565b81548110611012577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060060201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff021916908360018111156110ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506002820154816002015560038201548160030155600482015481600401556005820154816005015590505080838381548110611159577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600602016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115611209577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550606082015181600201556080820151816003015560a0820151816004015560c08201518160050155905050818061124490612843565b92505050610bbe565b6112636001600454611e0290919063ffffffff16565b5050505050505050565b611275611e18565b73ffffffffffffffffffffffffffffffffffffffff166112936115af565b73ffffffffffffffffffffffffffffffffffffffff16146112e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e0906125c9565b60405180910390fd5b6112f36000611e20565b565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561139c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611393906125a9565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054101561142f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611426906125e9565b60405180910390fd5b61149283600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611dd690919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016115579291906124ba565b602060405180830381600087803b15801561157157600080fd5b505af1158015611585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a99190611fb2565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6115e0611e18565b73ffffffffffffffffffffffffffffffffffffffff166115fe6115af565b73ffffffffffffffffffffffffffffffffffffffff1614611654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164b906125c9565b60405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060028290806001815401808255809150506001900390600052602060002001600090919091909150555050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b1906125a9565b60405180910390fd5b50505050565b600281815481106117d057600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561188b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611882906125a9565b60405180910390fd5b6001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016118fe93929190612483565b602060405180830381600087803b15801561191857600080fd5b505af115801561192c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119509190611fb2565b506119b483600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611e0290919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b6060600560008481526020019081526020016000206000836001811115611a5d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611bcc57838290600052602060002090600602016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115611b59577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115611b91577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160028201548152602001600382015481526020016004820154815260200160058201548152505081526020019060010190611a8b565b50505050905092915050565b60003411611be557600080fd5b611c6834600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f424e420000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611e0290919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f424e420000000000000000000000000000000000000000000000000000000000815260200190815260200160002081905550565b611ce6611e18565b73ffffffffffffffffffffffffffffffffffffffff16611d046115af565b73ffffffffffffffffffffffffffffffffffffffff1614611d5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d51906125c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611dca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dc190612549565b60405180910390fd5b611dd381611e20565b50565b60008183611de49190612798565b905092915050565b60008183611dfa919061273e565b905092915050565b60008183611e1091906126e8565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050611ef381612a24565b92915050565b600081519050611f0881612a3b565b92915050565b600081359050611f1d81612a52565b92915050565b600081359050611f3281612a69565b92915050565b600081359050611f4781612a79565b92915050565b600060208284031215611f5f57600080fd5b6000611f6d84828501611ee4565b91505092915050565b60008060408385031215611f8957600080fd5b6000611f9785828601611ee4565b9250506020611fa885828601611f0e565b9150509250929050565b600060208284031215611fc457600080fd5b6000611fd284828501611ef9565b91505092915050565b600060208284031215611fed57600080fd5b6000611ffb84828501611f0e565b91505092915050565b6000806040838503121561201757600080fd5b600061202585828601611f0e565b925050602061203685828601611ee4565b9150509250929050565b6000806040838503121561205357600080fd5b600061206185828601611f0e565b925050602061207285828601611f23565b9150509250929050565b60008060006060848603121561209157600080fd5b600061209f86828701611f0e565b93505060206120b086828701611f38565b92505060406120c186828701611f38565b9150509250925092565b6000806000606084860312156120e057600080fd5b60006120ee86828701611f23565b93505060206120ff86828701611f0e565b925050604061211086828701611f38565b9150509250925092565b6000806000806080858703121561213057600080fd5b600061213e87828801611f23565b945050602061214f87828801611f0e565b935050604061216087828801611f38565b925050606061217187828801611f38565b91505092959194509250565b60006020828403121561218f57600080fd5b600061219d84828501611f38565b91505092915050565b600080604083850312156121b957600080fd5b60006121c785828601611f38565b92505060206121d885828601611f0e565b9150509250929050565b60006121ee83836123a7565b60e08301905092915050565b612203816127cc565b82525050565b612212816127cc565b82525050565b6000612223826126a3565b61222d81856126bb565b935061223883612693565b8060005b8381101561226957815161225088826121e2565b975061225b836126ae565b92505060018101905061223c565b5085935050505092915050565b61227f816127ea565b82525050565b61228e816127ea565b82525050565b61229d81612831565b82525050565b6122ac81612831565b82525050565b60006122bf6026836126d7565b91506122ca826128cb565b604082019050919050565b60006122e26012836126d7565b91506122ed8261291a565b602082019050919050565b6000612305603a836126d7565b915061231082612943565b604082019050919050565b6000612328600f836126d7565b915061233382612992565b602082019050919050565b600061234b6020836126d7565b9150612356826129bb565b602082019050919050565b600061236e6016836126d7565b9150612379826129e4565b602082019050919050565b60006123916000836126cc565b915061239c82612a0d565b600082019050919050565b60e0820160008201516123bd6000850182612435565b5060208201516123d060208501826121fa565b5060408201516123e36040850182612294565b5060608201516123f66060850182612276565b5060808201516124096080850182612435565b5060a082015161241c60a0850182612435565b5060c082015161242f60c0850182612435565b50505050565b61243e81612827565b82525050565b61244d81612827565b82525050565b600061245e82612384565b9150819050919050565b600060208201905061247d6000830184612209565b92915050565b60006060820190506124986000830186612209565b6124a56020830185612209565b6124b26040830184612444565b949350505050565b60006040820190506124cf6000830185612209565b6124dc6020830184612444565b9392505050565b600060208201905081810360008301526124fd8184612218565b905092915050565b600060208201905061251a6000830184612285565b92915050565b60006040820190506125356000830185612285565b6125426020830184612209565b9392505050565b60006020820190508181036000830152612562816122b2565b9050919050565b60006020820190508181036000830152612582816122d5565b9050919050565b600060208201905081810360008301526125a2816122f8565b9050919050565b600060208201905081810360008301526125c28161231b565b9050919050565b600060208201905081810360008301526125e28161233e565b9050919050565b6000602082019050818103600083015261260281612361565b9050919050565b600060208201905061261e6000830184612444565b92915050565b600060e082019050612639600083018a612444565b6126466020830189612209565b61265360408301886122a3565b6126606060830187612285565b61266d6080830186612444565b61267a60a0830185612444565b61268760c0830184612444565b98975050505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006126f382612827565b91506126fe83612827565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127335761273261286d565b5b828201905092915050565b600061274982612827565b915061275483612827565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561278d5761278c61286d565b5b828202905092915050565b60006127a382612827565b91506127ae83612827565b9250828210156127c1576127c061286d565b5b828203905092915050565b60006127d782612807565b9050919050565b60008115159050919050565b6000819050919050565b600081905061280282612a10565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061283c826127f4565b9050919050565b600061284e82612827565b915060008214156128625761286161286d565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e7375666669656e742062616c616e63650000000000000000000000000000600082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f546f6b656e206e6f742061646465640000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42616c616e6365206e6f742073756666696369656e7400000000000000000000600082015250565b50565b60028110612a2157612a2061289c565b5b50565b612a2d816127cc565b8114612a3857600080fd5b50565b612a44816127de565b8114612a4f57600080fd5b50565b612a5b816127ea565b8114612a6657600080fd5b50565b60028110612a7657600080fd5b50565b612a8281612827565b8114612a8d57600080fd5b5056fea26469706673582212206ef9f5bac52bd427b657aef276c0687609b719dba68e07ad5ace3d2721c323b864736f6c63430008040033";

type DexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dex__factory extends ContractFactory {
  constructor(...args: DexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dex> {
    return super.deploy(overrides || {}) as Promise<Dex>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Dex {
    return super.attach(address) as Dex;
  }
  connect(signer: Signer): Dex__factory {
    return super.connect(signer) as Dex__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexInterface {
    return new utils.Interface(_abi) as DexInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dex {
    return new Contract(address, _abi, signerOrProvider) as Dex;
  }
}
