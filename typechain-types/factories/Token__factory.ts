/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x72f06ae1",
        type: "bytes32",
      },
    ],
    name: "c_0x72f06ae1",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e0000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620002ee565b508060049080519060200190620000af929190620002ee565b505050620000e67f4533abd029df36204002e1feb04e322020ad258e671bb190e1eae9d9d81a2dfe60001b6200016860201b60201c565b6200011a7f32e1d7b5ecf83102bfba6604d6979d1775a001ba9cdd7f5b92ae03aaad28ebe860001b6200016860201b60201c565b6200014e7f42818fd224254748c600f463b49d1d608c09e13c2248c8b4855091a32fce9e4560001b6200016860201b60201c565b62000162336127106200016b60201b60201c565b6200054a565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001d590620003d6565b60405180910390fd5b620001f260008383620002e460201b60201c565b806002600082825462000206919062000426565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200025d919062000426565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002c49190620003f8565b60405180910390a3620002e060008383620002e960201b60201c565b5050565b505050565b505050565b828054620002fc906200048d565b90600052602060002090601f0160209004810192826200032057600085556200036c565b82601f106200033b57805160ff19168380011785556200036c565b828001600101855582156200036c579182015b828111156200036b5782518255916020019190600101906200034e565b5b5090506200037b91906200037f565b5090565b5b808211156200039a57600081600090555060010162000380565b5090565b6000620003ad601f8362000415565b9150620003ba8262000521565b602082019050919050565b620003d08162000483565b82525050565b60006020820190508181036000830152620003f1816200039e565b9050919050565b60006020820190506200040f6000830184620003c5565b92915050565b600082825260208201905092915050565b6000620004338262000483565b9150620004408362000483565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004785762000477620004c3565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620004a657607f821691505b60208210811415620004bd57620004bc620004f2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61141e806200055a6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a35780637555a22d146101d357806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610e9d565b60405180910390f35b6100f160048036038101906100ec9190610cc2565b61032f565b6040516100fe9190610e82565b60405180910390f35b61010f61034d565b60405161011c9190610f9f565b60405180910390f35b61013f600480360381019061013a9190610c73565b610357565b60405161014c9190610e82565b60405180910390f35b61015d61044f565b60405161016a9190610fba565b60405180910390f35b61018d60048036038101906101889190610cc2565b610458565b60405161019a9190610e82565b60405180910390f35b6101bd60048036038101906101b89190610c0e565b610504565b6040516101ca9190610f9f565b60405180910390f35b6101ed60048036038101906101e89190610cfe565b61054c565b005b6101f761054f565b6040516102049190610e9d565b60405180910390f35b61022760048036038101906102229190610cc2565b6105e1565b6040516102349190610e82565b60405180910390f35b61025760048036038101906102529190610cc2565b6106cc565b6040516102649190610e82565b60405180910390f35b61028760048036038101906102829190610c37565b6106ea565b6040516102949190610f9f565b60405180910390f35b6060600380546102ac906110d9565b80601f01602080910402602001604051908101604052809291908181526020018280546102d8906110d9565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c610771565b8484610779565b6001905092915050565b6000600254905090565b6000610364848484610944565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af610771565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610f1f565b60405180910390fd5b6104438561043b610771565b858403610779565b60019150509392505050565b60006012905090565b60006104fa610465610771565b848460016000610473610771565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104f59190610ff1565b610779565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b50565b60606004805461055e906110d9565b80601f016020809104026020016040519081016040528092919081815260200182805461058a906110d9565b80156105d75780601f106105ac576101008083540402835291602001916105d7565b820191906000526020600020905b8154815290600101906020018083116105ba57829003601f168201915b5050505050905090565b600080600160006105f0610771565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a490610f7f565b60405180910390fd5b6106c16106b8610771565b85858403610779565b600191505092915050565b60006106e06106d9610771565b8484610944565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090610f5f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610edf565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109379190610f9f565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90610f3f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b90610ebf565b60405180910390fd5b610a2f838383610bc5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90610eff565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b489190610ff1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bac9190610f9f565b60405180910390a3610bbf848484610bca565b50505050565b505050565b505050565b600081359050610bde816113a3565b92915050565b600081359050610bf3816113ba565b92915050565b600081359050610c08816113d1565b92915050565b600060208284031215610c2057600080fd5b6000610c2e84828501610bcf565b91505092915050565b60008060408385031215610c4a57600080fd5b6000610c5885828601610bcf565b9250506020610c6985828601610bcf565b9150509250929050565b600080600060608486031215610c8857600080fd5b6000610c9686828701610bcf565b9350506020610ca786828701610bcf565b9250506040610cb886828701610bf9565b9150509250925092565b60008060408385031215610cd557600080fd5b6000610ce385828601610bcf565b9250506020610cf485828601610bf9565b9150509250929050565b600060208284031215610d1057600080fd5b6000610d1e84828501610be4565b91505092915050565b610d3081611059565b82525050565b6000610d4182610fd5565b610d4b8185610fe0565b9350610d5b8185602086016110a6565b610d6481611169565b840191505092915050565b6000610d7c602383610fe0565b9150610d878261117a565b604082019050919050565b6000610d9f602283610fe0565b9150610daa826111c9565b604082019050919050565b6000610dc2602683610fe0565b9150610dcd82611218565b604082019050919050565b6000610de5602883610fe0565b9150610df082611267565b604082019050919050565b6000610e08602583610fe0565b9150610e13826112b6565b604082019050919050565b6000610e2b602483610fe0565b9150610e3682611305565b604082019050919050565b6000610e4e602583610fe0565b9150610e5982611354565b604082019050919050565b610e6d8161108f565b82525050565b610e7c81611099565b82525050565b6000602082019050610e976000830184610d27565b92915050565b60006020820190508181036000830152610eb78184610d36565b905092915050565b60006020820190508181036000830152610ed881610d6f565b9050919050565b60006020820190508181036000830152610ef881610d92565b9050919050565b60006020820190508181036000830152610f1881610db5565b9050919050565b60006020820190508181036000830152610f3881610dd8565b9050919050565b60006020820190508181036000830152610f5881610dfb565b9050919050565b60006020820190508181036000830152610f7881610e1e565b9050919050565b60006020820190508181036000830152610f9881610e41565b9050919050565b6000602082019050610fb46000830184610e64565b92915050565b6000602082019050610fcf6000830184610e73565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610ffc8261108f565b91506110078361108f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561103c5761103b61110b565b5b828201905092915050565b60006110528261106f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156110c45780820151818401526020810190506110a9565b838111156110d3576000848401525b50505050565b600060028204905060018216806110f157607f821691505b602082108114156111055761110461113a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6113ac81611047565b81146113b757600080fd5b50565b6113c381611065565b81146113ce57600080fd5b50565b6113da8161108f565b81146113e557600080fd5b5056fea2646970667358221220e052618590d0294c2be0cb272fb63cca26c34988d4d2b86b7726322e23e1a1f164736f6c63430008040033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
